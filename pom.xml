<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>


	<groupId>pt.credibom.checklist</groupId>
	<artifactId>checklist-ms</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.0.5</version>
	</parent>

	<!-- <scm> -->
	<!-- <connection>scm:git:https://gitlab.cbdomain.crb/public-projects/generic-ms/otp-service.git</connection> -->
	<!-- <developerConnection>scm:git:https://gitlab.cbdomain.crb/public-projects/generic-ms/otp-service.git</developerConnection> -->
	<!-- <tag>tag</tag> -->
	<!-- </scm> -->

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>17</java.version>
		<docker.java.version>17-alpine</docker.java.version>
		<docker.dockerize.version>v0.6.1</docker.dockerize.version>
		<checklist.docker.container.name>checklist</checklist.docker.container.name>
		<checklist.docker.image.name>kairos/checklist</checklist.docker.image.name>
		<docker.work.directory>${project.build.directory}/docker-workspace</docker.work.directory>

		<version.plugin.checkstyle>3.1.2</version.plugin.checkstyle>
		<version.plugin.dependencyCheck>7.0.4</version.plugin.dependencyCheck>
		<springdoc.version>1.6.14</springdoc.version>

		<version.plugin.checkstyle>3.2.1</version.plugin.checkstyle>
		<version.plugin.dependency-check>8.0.2</version.plugin.dependency-check>
		<yaml-properties-maven-plugin.version>1.1.3</yaml-properties-maven-plugin.version>
		<maven-resources-plugin.version>3.3.0</maven-resources-plugin.version>
		<dockerfile-maven-plugin.version>1.4.13</dockerfile-maven-plugin.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<dependency>
			<groupId>javax.persistence</groupId>
			<artifactId>javax.persistence-api</artifactId>
			<version>2.2</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
		</dependency>

		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>

		<!-- Jackson Dependencies -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jdk8</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jsr310</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.module</groupId>
			<artifactId>jackson-module-paranamer</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.module</groupId>
			<artifactId>jackson-module-parameter-names</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-ui</artifactId>
			<version>${springdoc.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-data-rest</artifactId>
			<version>${springdoc.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-security</artifactId>
			<version>${springdoc.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-jpamodelgen-jakarta</artifactId>
			<version>5.6.14.Final</version>
		</dependency>


		<!-- https://mvnrepository.com/artifact/jakarta.annotation/jakarta.annotation-api -->
		<dependency>
			<groupId>jakarta.annotation</groupId>
			<artifactId>jakarta.annotation-api</artifactId>
		</dependency>

		<dependency>
			<groupId>it.ozimov</groupId>
			<artifactId>yaml-properties-maven-plugin</artifactId>
			<version>${yaml-properties-maven-plugin.version}</version>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-resources-plugin -->
		<dependency>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-resources-plugin</artifactId>
			<version>${maven-resources-plugin.version}</version>
		</dependency>

	</dependencies>

 	<repositories>
		<repository>
			<id>credibom-release-local</id>
			<name>credibom-release-local</name>
			<url>https://nexus.linus.cbdomain.crb/repository/credibom-release-local</url>
		</repository>
	</repositories>

	<!--<pluginRepositories> <pluginRepository> <id>maven-repos</id> <name>maven-repos</name> 
		<url>https://nexus.linus.cbdomain.crb/repository/maven-repos</url> </pluginRepository> 
		</pluginRepositories> -->

	<distributionManagement>
		<!-- Publish the versioned releases here -->
		<repository>
			<id>credibom-release-local</id>
			<name>credibom-release-local</name>
			<url>https://nexus.linus.cbdomain.crb/repository/credibom-release-local/</url>
		</repository>

		<!-- Publish the versioned releases here -->
		<snapshotRepository>
			<id>credibom-snapshot-local</id>
			<name>credibom-snapshot-local</name>
			<url>https://nexus.linus.cbdomain.crb/repository/credibom-snapshot-local/</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</snapshotRepository>
	</distributionManagement>
	
	<build>
		<finalName>Checklist</finalName>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>*.yml</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>false</filtering>
				<excludes>
					<exclude>*.yml</exclude>
				</excludes>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<executable>true</executable>
					<mainClass>pt.credibom.checklist.Application</mainClass>
					<layout>JAR</layout>
				</configuration>

				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
						<configuration>
							<mainClass>pt.credibom.checklist.Application</mainClass>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<forceJavacCompilerUse>true</forceJavacCompilerUse>
					<annotationProcessorPaths>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>${lombok.version}</version>
						</path>
					</annotationProcessorPaths>
				</configuration>
				<executions>
					<execution>
						<id>compile-main</id>
						<configuration>
							<failOnWarning>true</failOnWarning>
							<showWarnings>true</showWarnings>
							<showDeprecation>true</showDeprecation>
							<compilerArgs>
								<arg>-Xlint</arg>
								<arg>-Xlint:-processing</arg>
							</compilerArgs>
						</configuration>
					</execution>
					<execution>
						<id>compile-api-client</id>
						<configuration>
							<failOnWarning>false</failOnWarning>
							<showWarnings>false</showWarnings>
							<showDeprecation>false</showDeprecation>
						</configuration>
					</execution>
				</executions>
			</plugin>


			<!-- Checkstyle plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${version.plugin.checkstyle}</version>
				<dependencies>
					<dependency>
						<groupId>com.puppycrawl.tools</groupId>
						<artifactId>checkstyle</artifactId>
						<version>10.1</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<configLocation>checkstyle.xml</configLocation>
							<consoleOutput>true</consoleOutput>
							<failsOnError>true</failsOnError>
							<excludes>**/generated/**/*</excludes>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Dependency check -->
			<plugin>
				<groupId>org.owasp</groupId>
				<artifactId>dependency-check-maven</artifactId>
				<version>${version.plugin.dependency-check}</version>
				<configuration>
					<formats>html,xml,json</formats>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.bsc.maven</groupId>
				<artifactId>maven-processor-plugin</artifactId>
				<version>2.2.4</version>
				<executions>
					<execution>
						<id>process</id>
						<goals>
							<goal>process</goal>
						</goals>
						<phase>generate-sources</phase>
						<configuration>
							<processors>
								<processor>org.hibernate.jpamodelgen.JPAMetaModelEntityProcessor</processor>
							</processors>
						</configuration>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>org.hibernate</groupId>
						<artifactId>hibernate-jpamodelgen-jakarta</artifactId>
						<version>5.6.14.Final</version>
					</dependency>
				</dependencies>
			</plugin>

		</plugins>
	</build>

	<profiles>
		<!-- Basic checks that are not requiring too much runtime. -->
		<profile>
			<id>checkstyle</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-checkstyle-plugin</artifactId>
						<version>${version.plugin.checkstyle}</version>
						<executions>
							<execution>
								<id>verify-style</id>
								<phase>process-classes</phase>
								<goals>
									<goal>check</goal>
								</goals>
								<configuration>
									<configLocation>checkstyle.xml</configLocation>
									<consoleOutput>true</consoleOutput>
									<failsOnError>true</failsOnError>
									<excludes>**/generated/**/*,**/mappers/**/*</excludes>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	
		<!-- Docker profile -->
		<profile>
			<id>docker</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<executions>
							<!-- Copy and filter docker-compose files-->
							<execution>
								<id>copy-docker-compose</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${docker.work.directory}</outputDirectory>
									<resources>
										<resource>
											<directory>./docker</directory>
											<filtering>true</filtering>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<groupId>it.ozimov</groupId>
						<artifactId>yaml-properties-maven-plugin</artifactId>
						<version>${yaml-properties-maven-plugin.version}</version>
						<executions>
							<execution>
								<phase>initialize</phase>
								<goals>
									<goal>read-project-properties</goal>
								</goals>
								<configuration>
									<files>
										<file>./docker/checklist.yml</file>
									</files>
								</configuration>
							</execution>
						</executions>
					</plugin>
					
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
